/**
 * \page Doc_FAQ Frequently asked questions
 *
 * On this page, you will find the most frequently asked question. If you don't find what you need here, feel free to ask on the forum.
 *
 * \section Doc_FAQ_WhatDoIFind What do I find in this FAQ ?
 *
 * In this FAQ, you will find the following information :
 * - \ref Doc_FAQ_What
 * - \ref Doc_FAQ_Vibe
 * - \ref Doc_FAQ_Licence
 * - \ref Doc_FAQ_Status
 * - \ref Doc_FAQ_Environment
 * - \ref Doc_FAQ_Functionalities
 * - \ref Doc_FAQ_Devices
 * - \ref Doc_FAQ_UnstableDrivers
 * - \ref Doc_FAQ_Cite
 * - \ref Doc_FAQ_GTK
 * - \ref Doc_FAQ_DownloadSources
 * - \ref Doc_FAQ_DownloadBinaries
 * - \ref Doc_FAQ_ProblemsCompiling
 * - \ref Doc_FAQ_BuildUnderEclipse
 * - \ref Doc_FAQ_CompileTime
 * - \ref Doc_FAQ_BranchChanging
 * - \ref Doc_FAQ_ProblemsUsing
 * - \ref Doc_FAQ_Bug
 * - \ref Doc_FAQ_Contribute
 * - \ref Doc_FAQ_OtherBCISoftwareConnections
 * - \ref Doc_FAQ_DirectX
 * - \ref Doc_FAQ_ColorDepth
 * - \ref Doc_FAQ_DependencyInstallationLinux
 * - \ref Doc_FAQ_LinuxMatlabWontRun
 * - \ref Doc_FAQ_FAQCount
 *
 * \section Doc_FAQ_What What is OpenViBE ?
 *
 * §OpenViBE§ is a software platform that enables to design, test and use
 * Brain-Computer Interfaces. Brain-Computer Interfaces (BCI) are communication systems that enable users to
 * send commands to computers only by means of brain activity. BCI are gaining interest inside the Virtual
 * Reality (VR) community as they have appeared as promising interaction devices for Virtual Environments (VE).
 *
 * \section Doc_FAQ_Vibe What does the ViBE stand for ?
 *
 * Well, intially, OpenViBE was for "Open Virtual Brain Environment"... We no longer want to limit the use
 * of OpenViBE to Virtual Environments... So you could now just take OpenViBE as a noun, it's no longer an acronym :)
\htmlonly
<!--
\endhtmlonly
 * Or you could consider the \e vibe as the brainwave ;)
\htmlonly
-->
\endhtmlonly
 *
 * \section Doc_FAQ_Licence What is the licence of OpenViBE ?
 *
 * The licence for §OpenViBE§ basically is L-GPL, see \ref Doc_Licence for details about this licence. Some 
 * §OpenViBE§ plugins are based on GPL libraries. Consequently, those plugins are GPL.
 *
 * \section Doc_FAQ_Status What is the current status of OpenViBE ?
 *
 * §OpenViBE§ is quite a young software. The development began from scratch in 2006. It already offers several
 * complete processing pipelines. It has been successfully used by the authors in different contexts, including
 * motor imagery interactions and basic neurofeedback experiments. Currently available functionalities are far 
 * from complete, but the plugin architecture should facilitate the integration of new functionalities and 
 * limit the number of changes to the API (which is bound to evolve in the next few months anyway, if only to be
 * improved). Additionally, it is expected that external contributions will soon help enlarge §OpenViBE§ 
 * functionalities.
 *
 * For now, this software should be considered as being in alpha stage with a reasonably stable API.
 *
 * \section Doc_FAQ_Environment What kind of computer / operating system do I need to run OpenViBE ?
 *
\htmlonly
<!-- os-compatibility start -->
\endhtmlonly
 *
 * §OpenViBE§ currently runs on standard desktop PCs and compiles on differents targets.
 * Note that even if §OpenViBE§ has been reported to compile / run on many different platforms, we can't provide
 * support for all of them at the same time... On windows, we support the latest version of visual C++ express.
 * On the linux side, we basically support both the latest Long Term Support (LTS) and latest non-LTS version
 * of Ubuntu on one hand and the two latest Fedora on the other hand.
 *
 * The following table shows a summary of these different configurations... and of the configrations we officially support.
 *
\htmlonly
<table class='faq-os' cellpading=0 cellspacing=0>
<tr bgcolor=lightgrey> <th>CPU</th> <th>Operating System</th> <th>Distribution</th> <th>Compiler</th> <th>Status</th> <th>Officially supported</th> </tr>
<tr> <td rowspan=15>x86</td>   <td rowspan=3>Windows</td>  <td rowspan=2>XP SP2</td>      <td>Visual C++ 2008 Express</td>            <td bgcolor=green>OK (last built 2009/12)</td> <td bgcolor=green>Yes</td> </tr>
<tr>                                                                                     <td>Visual C++ 2005 Express <b>SP1</b></td> <td bgcolor=green>OK</td> <td bgcolor=orange>No</td> </tr>
<tr>                                                       <td>Vista</td>                 <td>Visual C++ 2005 Express <b>SP1</b></td> <td bgcolor=green>OK</td> <td bgcolor=orange>No</td> </tr>
<tr>                           <td rowspan=12>Linux</td>   <td>Ubuntu 9.10 Karmic</td>    <td>GCC 4.4.1</td>                          <td bgcolor=green>OK (last built 2009/12)</td> <td bgcolor=green>Yes</td> </tr>
<tr>                                                       <td>Ubuntu 9.04 Jaunty</td>    <td>GCC 4.3.3</td>                          <td bgcolor=green>OK (last built 2009/12)</td> <td bgcolor=orange>No</td> </tr>
<tr>                                                       <td>Ubuntu 8.10 Intrepid</td>  <td>GCC 4.3.2</td>                          <td bgcolor=green>OK</td> <td bgcolor=orange>No</td> </tr>
<tr>                                                       <td>Ubuntu 8.04 LTS Hardy</td> <td>GCC 4.2.4</td>                          <td bgcolor=green>OK (last built 2009/12)</td> <td bgcolor=green>Yes</td> </tr>
<tr>                                                       <td>Fedora 12</td>             <td>GCC 4.4.2</td>                          <td bgcolor=green>OK (last built 2009/12)</td> <td bgcolor=green>Yes</td> </tr>
<tr>                                                       <td>Fedora 11</td>             <td>GCC 4.4.1</td>                          <td bgcolor=green>OK (last built 2009/12)</td> <td bgcolor=green>Yes</td> </tr>
<tr>                                                       <td>Fedora 10</td>             <td>GCC 4.3.2</td>                          <td bgcolor=green>OK (last built 2009/12)</td> <td bgcolor=orange>No</td> </tr>
<tr>                                                       <td>Fedora 8</td>              <td>GCC ?</td>                              <td bgcolor=green>OK</td> <td bgcolor=orange>No</td> </tr>
<tr>                                                       <td>Fedora Core 5</td>         <td>GCC ?</td>                              <td bgcolor=green>OK</td> <td bgcolor=orange>No</td> </tr>
<tr>                                                       <td>Fedora Core 4</td>         <td>GCC ?</td>                              <td bgcolor=green>OK</td> <td bgcolor=orange>No</td> </tr>
<tr>                                                       <td>Fedora Core 3</td>         <td>GCC 3.4.3</td>                          <td bgcolor=orange>No 3D visualisation</td> <td bgcolor=orange>No</td> </tr>
<tr>                                                       <td>Debian 5</td>              <td>GCC 4.3.2</td>                          <td bgcolor=green>OK</td> <td bgcolor=orange>No</td> </tr>
<tr> <td rowspan=11>x86_64</td> <td rowspan=1>Windows</td> <td colspan=2>Any</td>                                                <td bgcolor=grey>Untested (feedbacks welcome)</td> <td bgcolor=grey>No</td> </tr>
<tr>                            <td rowspan=10>Linux</td>  <td>Ubuntu 9.10 Karmic</td>    <td>GCC 4.4.1</td>                          <td bgcolor=green>OK</td> <td bgcolor=green>Yes</td> </tr>
<tr>                                                       <td>Ubuntu 9.04 Jaunty</td>    <td>GCC 4.3.3</td>                          <td bgcolor=green>OK (last built 2009/12)</td> <td bgcolor=orange>No</td> </tr>
<tr>                                                       <td>Ubuntu 8.10 Intrepid</td>  <td>GCC 4.3.2</td>                          <td bgcolor=green>OK</td> <td bgcolor=orange>No</td> </tr>
<tr>                                                       <td>Ubuntu 8.04 LTS Hardy</td> <td>GCC 4.2.4</td>                          <td bgcolor=green>OK</td> <td bgcolor=green>Yes</td> </tr>
<tr>                                                       <td>Fedora 12</td>             <td>GCC 4.4.2</td>                          <td bgcolor=green>OK</td> <td bgcolor=green>Yes</td> </tr>
<tr>                                                       <td>Fedora 11</td>             <td>GCC 4.4.1</td>                          <td bgcolor=green>OK</td> <td bgcolor=green>Yes</td> </tr>
<tr>                                                       <td>Fedora 10</td>             <td>GCC 4.3.2</td>                          <td bgcolor=green>OK</td> <td bgcolor=orange>No</td> </tr>
<tr>                                                       <td>Fedora 9</td>              <td>GCC 4.3.0</td>                          <td bgcolor=green>OK</td> <td bgcolor=orange>No</td> </tr>
<tr>                                                       <td>Gentoo</td>                <td>GCC ?</td>                              <td bgcolor=red>Dependencies installation fails</td> <td bgcolor=red>No</td> </tr>
<tr>                                                       <td>Arch 2009.08</td>          <td>GCC ?</td>                              <td bgcolor=orange>Needs some tuning on dependencies installation</td> <td bgcolor=orange>No</td> </tr>
</table>
<!-- os-compatibility stop -->
\endhtmlonly
 *
 * If you have tested §OpenViBE§ on another platform, please fill free to report its status for this platform.
 *
 * \section Doc_FAQ_Functionalities What are the current functionalities of OpenViBE ?
 *
 * Here is a non exhaustive list of §OpenViBE§ functionalities :
\htmlonly
<!-- features start -->
\endhtmlonly
 * - File reading and writing
 *   - Generic files (r/w)
 *   - GDF files (r/w)
 *   - BCI Competition IIIb (r)
 *   - Brainamp files (r)
 *
 * - Preprocessing
 *   - Time based epoching
 *   - Stimulation based epoching
 *   - Moving average
 *   - Windowing
 *   - Channel selection
 *   - Simple DSP
 *   - Temporal filter
 *   - Downsampling (in progress)
 *
 * - Feature extraction
 *   - Spectral analysis
 *   - Spatial filter
 *
 * - Classification
 *   - Linear Discriminant Analysis
 *
 * - Stimulation presentation
 *   - Graz-like motor imagery presentation
 *
 * - Visualisation
 *   - Simple levels
 *   - Raw signal
 *   - Spectrum
 *   - Time/Frequency analysis
 *   - 2D/3D topography
 *
 * - Connection to external software
 *   - VRPN integration (Virtual Reality Peripheral Network)
 *   - TurboFieldTrip integration (r/w, in progress)
 *
\htmlonly
<!-- features stop -->
\endhtmlonly
 *
 * \section Doc_FAQ_Devices What acqusition devices are compatible with OpenViBE ?
 *
\htmlonly
<!-- hardware-compatibility start -->
\endhtmlonly
 * The following hardware devices are fully compatible with OpenViBE :
 *   - Mindmedia NeXus32B
 *   - ANT Neuro ASALAB EEG / ERP amplifier (32-256 channels) has been reported to work with NeXus32B driver
 *   - TMSi Porti32 has been reported to work with NeXus32B driver
 *   - Brain Products V-Amp
 *   - g.Tec g.USBamp
 *   - OpenEEG modularEEG / monolithEEG
 *
 * The following hardware devices are partially supported with OpenViBE :
 *   - Brainamp Standard (through the recording software Vision Recorder)
 *   - Micromed IntraEEG
 *   - CTF/VSM MEG
 *
 * The following hardware devices are currently being integrated in OpenViBE :
 *   - Mitsar EEG 202
 *   - Neuroscan SynAmps2 (through the recording software Scan 4.3)
 *   - TMSi Refa
 *   - Brainquiry QPET9 (developement is stalled)
 *
\htmlonly
<!-- hardware-compatibility stop -->
\endhtmlonly
 *
 * \section Doc_FAQ_UnstableDrivers I want to use "partially supported" acquisition drivers but they do not appear in the acquisition server driver combo box.
 *
 * Those drivers are flagged as \e unstable in the sense they will work only in some specific conditions.
 * In order to make them appear, you will have to edit the configuration file and add it this line
 * \code
AcquisitionServer_ShowUnstable = true
 * \endcode
 * Your configuration file is \e %HOME%/.openviberc under linux and \e %USERPROFILE%/openvibe.conf under windows.
 *
 * Please come on the forum / IRC to discuss what conditions should be considered in order to use those drivers successfully.
 *
 * \section Doc_FAQ_Cite I'm a scientist and I wan't to cite OpenViBE, how should I proceed ?
 *
 * Please use the following refence to cite OpenViBE in your publications :
 * <em>Y. Renard, F. Lotte, G. Gibert, M. Congedo, E. Maby, V. Delannoy, O. Bertrand, A. Lécuyer,
 * "OpenViBE: An Open-Source Software Platform to Design, Test and Use Brain-Computer Interfaces in Real and Virtual Environments",
 * Presence : teleoperators and virtual environments, vol. 19, no 1, 2010 (in press)</em>
 *
 * \section Doc_FAQ_GTK Why did you favor GTK over Qt ?
 *
 * People often wonder why GTK was chosen to handle $OpenViBE$ GUI requirements, arguing that Qt presents a number of advantages over 
 * GTK, particularly under Windows. This choice comes from the authors decision not to distribute the §OpenViBE§ platform under a GPL licence,
 * which would make it possible for private companies to base their software on §OpenViBE§ without their having to release their source code.
 * Even though Qt probably has better support and better implementation/integration under Windows, using this library would have required  
 * most §OpenViBE§ components to be distributed under the GPL. Since the §OpenViBE§ platform is developed in an open source spirit, the GTK
 * library was found to better fit the context of the project.
 *
 * \section Doc_FAQ_DownloadSources Where can I download OpenViBE sources ?
 *
 * The latest unstable sources can be downloaded with subversion from the gforge at https://gforge.inria.fr/projects/openvibe .
 * Alternatively, you may want to download the latest stable source package from http://openvibe.inria.fr
 *
 * \section Doc_FAQ_DownloadBinaries Where can I download OpenViBE precompiled binaries ?
 *
 * Some probably outdated windows binaries could be found at http://www.irisa.fr/bunraku/OpenViBE/binaries/win32 .
 * These precompiled versions are not officially supported yet so don't expect regular updates.
 *
 * Additionnaly we are looking for a smart solution to have precompiled packages for Linux on several distribution. If you
 * have any advice, please feel free to share. See \ref Doc_Contact for how to contact us.
 *
 * \section Doc_FAQ_ProblemsCompiling I have problems compiling OpenViBE, what should I do ?
 *
 * First, make sure you followed the install procedure described in \ref Doc_Install . If problems persist, you can get some help from
 * the people involved in this project. See \ref Doc_Contact for how to contact us.
 *
 * \section Doc_FAQ_BuildUnderEclipse Is it possible to build and run OpenViBE with Eclipse ?
 *
 * Well, it's almost possible yes :)
 *
 * After, you have made a project for OpenViBE under Eclipse. you can used the OpenViBE commands files with the Eclipse's function "External Tools". 
 *
 * All configuration is located in the menu "Run > External Tools > External Tools Configuration...".
 * First, make a new "Program" and choose a name for it.
 *   - Example: "Openvibe-Build"
 *
 * In the tab "Main", fill next fields (for Linux):
 *   - Location: "${workspace_loc:/openvibe/trunk/scripts/linux-build}"
 *   - Working directory: "${workspace_loc:/openvibe/trunk/scripts}"
 *
 * For Windows, it's the same process but the value of fields change.
 *   - Location: "${workspace_loc:/openvibe/trunk/scripts/win32-build.cmd}"
 *   - Working directory: "${workspace_loc:/openvibe/trunk/scripts}"
 *
 * Now, if you want run OpenViBE under Eclipse it's the same process.
 * For Linux, only one "Program" is necessary. create a new "Program" with a different name and fill fields.
 *   - Example name : "openvibe-linux-test"
 *   - Location: "${workspace_loc:/openvibe/trunk/scripts/linux-test}"
 *   - Working directory: "${workspace_loc:/openvibe/trunk/scripts}"
 *
 * For Windows, if you want lauch the "Acquisition Server" and the "Designer", you must create 2 "Program":
 *   - Example name : "openvibe-test-acquisition-server"
 *   - Location: "${workspace_loc:/openvibe/trunk/dist/test-acquisition-server.cmd}"
 *   - Working directory: "${workspace_loc:/openvibe/trunk/dist}"
 *
 * And for the "Designer":
 *   - Example name : "openvibe-test-designer"
 *   - Location: "${workspace_loc:/openvibe/trunk/dist/test-designer.cmd}"
 *   - Working directory: "${workspace_loc:/openvibe/trunk/dist}"
 *
 * Then, you can launch the builder and runners with this same menu "Run > External Tools > External Tools Configuration...".
 * Select the "Program" you want execute and use the button "Run" at the down of the dialog box.
 *
 * \section Doc_FAQ_CompileTime Compiling OpenViBE is far too long especially on Windows, what could I do to speed it up ?
 *
 * You have to build the whole software at least once...
 *
 * Then suppose you are working on a classification plugin, simply edit your <i>win32-init_env_command.cmd</i> or
 * <i>linux-init_env_command</i> and remove all the projects of the build order (at the end of the file) except
 * the openvibe classification plugin project.
 *
 * Now when you call <i>win32-build.cmd</i> or <i>linux-build</i>, only your project will be checked, compiled
 * and installed.
 *
 * <b>Warning</b>: You should use this functionnality with care because it won't guarantee a perfect behavior.
 * For example, if you are modifying the toolkit, all the projects depending on the toolkit will have to be rebuilt.
 * Additionnaly, if you clean everything with <i>win32-clean.cmd</i> or <i>linux-clean</i>, you will have to reactivate
 * all the projects back in <i>win32-init_env_command.cmd</i> or <i>linux-init_env_command</i> to have a new working
 * environment. You've been warned, use with care !
 *
 * \section Doc_FAQ_BranchChanging The branch changes are not considered at compilation time, why is that ?
 *
 * Don't forget to clean everything before editing your <i>win32-init_env_command.cmd</i> or <i>linux-init_env_command</i>
 * to switch your developements to other branches. If you don't do this, <i>cmake</i> will keep compiling the software
 * in the old branches because of its cache. Cleaning everything will cause the header and library files to be
 * removed and thus force <i>cmake</i> to search for them again.
 *
 * More generally here is the correct way to work with our branches :
 *  * clean
 *  * svn update / branch switch / whatever eventually involves the structure of the code
 *  * re-build
 *
 * \section Doc_FAQ_ProblemsUsing I have problems using OpenViBE, what should I do ?
 *
 * A good place to start learning about the platform is to read the existing documentation. Several documentation files are dedicated to
 * explaining the use of the platform and its associated tools.
 *
 * If still having problems after this reading, you may contact the community to discuss the problem. Visit the forum or send a message to
 * the mailing lists.
 *
 * \section Doc_FAQ_Bug I think I found a bug, what should I do ?
 *
 * If you think you found a bug, please take a few minutes to fill a bug report at http://openvibe.inria.fr/tracker/bug_report_page.php .
 * You will first want to check that your bug is not already listed in the tracker. If it is not, then you may fill in a complete bug report. 
 * Try to provide detailed information regarding the conditions in which the bug occured, this will help us reproduce it. We will typically want to know what 
 * hardware you have, the name/version of your operating system and compiler. Additional data such as a sample scenario and/or EEG record may also prove
 * useful. Overall, the more information you provide in your bug report, the easier it is for us to try to solve the bug.
 *
 * \section Doc_FAQ_Contribute How can I contribute to OpenViBE ?
 *
 * There are many ways in which you can contribute to §OpenViBE§ :
 *  - developers : you can implement new boxes, new algorithms, new drivers
 *  - documentation : you can enhance the existing documentation or write new tutorials
 *  - testing : you can help test new features, new operating systems, new hardware, and send us feedback or fill bug reports when needed
 *  - support : you can provide help to the community by regularly visiting the forum and joining the IRC and mailing lists
 *  - packaging : you can build <i>RPMs</i>, <i>DEBs</i> or whatever package your linux distro uses
 *
 * In any case, you should start by reading the \ref Doc_ContributionRules . If you still have questions, you can also \ref Doc_Contact us.
 *
 * \section Doc_FAQ_OtherBCISoftwareConnections Are there any existing connections with other BCI platforms ?
 *
 * A bridge with TurboFieldTrip is currently being implemented.
 *
 * Other connections are not planned yet, but feel free to \ref Doc_Contact us if you think a connection with your software could be a plus.
 *
 * \section Doc_FAQ_DirectX On Windows, launching OpenViBE complains about missing d3dx9_33.dll or d3dx9_38.dll, what should I do ?
 *
 * This message is a generic message that Windows prints when a DLL should be loaded and can't be found. The d3dx9_33.dll and d3dx9_38.dll file are part of
 * DirectX (Microsoft 3D acceleration API) which is used by Ogre3D. The best thing to do is to actually install DirectX on your
 * computer. You can find it searching for Direct X redist on google (or following this link http://www.google.fr/search?q=directx+redist+site%3Amicrosoft.com).
 * Be carefull with the release date because you still can find 2004 versions of DirectX and these versions may be proposed first.
 *
 * Anyway, if you don't want or can't install DirextX, Ogre3D will use OpenGL and just work with no limitation. You will just have to
 * click the OK button each time you try to launch OpenViBE.
 *
 * \section Doc_FAQ_ColorDepth On Windows, I can drag and drop the boxes but I can't select / click / connect / configure anything, what should I do ?
 *
 * Your screen is probably configured with a bad color depth. You should consider changing the color depth to 24 or 32 bits. In
 * order to do that, right clik on the desktop, chose "properties" and go in the "parameters" tab. You can change the colore depth
 * on the right side of this panel. Restart OpenViBE when the change is done.
 *
 * \section Doc_FAQ_DependencyInstallationLinux Why did you write this crappy dependency installation script for Linux ?
 *
 * OK, most Linux users will wonder what this installation script was created for in the first place. 
 *
 * First, it was estimated at the start of the project that the installation of dependencies in one click would be a plus for a certain 
 * category of users. While this is the standard way of installing an application under Windows, it isn't under Linux, where most 
 * distributions come with their own packaging system, be it rpm or apt-get. However, some of our dependencies (namely, OpenMASK and VRPN)
 * do not appear in the official packages of common Linux distributions. Second, it was decided that the installation process should not 
 * require users to have root access to their computer to install the §OpenViBE§ dependencies. Third, minor patches are applied to some of 
 * the installed dependencies. Last, using such a script guarantees that all Linux users have the same version of the dependencies.
 *
 * These are the reasons why an installation script is used. However, it is still possible that dependencies are handled differently in the future, 
 * especially if precompiled packages for dedicated distributions are made available. Until then, one should rather go for the installation script 
 * rather than official precompiled packages.
 *
 * Also, one might want to know why this script installs so many low level packages such as Xlib, xproto and so on. In fact, it was decided to
 * keep the number of required preinstalled dependencies to a minimum (including compiling tools such as g++, gfortran, autotools etc...) and
 * to compile everything from scratch. The script was conceived so that everything can be built from a very basic configuration, e.g. from a fresh 
 * Ubuntu installation, with \c build-essentials, \c g77, and \c subversion the only required tools before a user may proceed with the installation of 
 * §OpenViBE§.
 *
 * \section Doc_FAQ_LinuxMatlabWontRun On Linux, MATLAB filter keeps saying 'Can't start MATLAB engine', what do I do ?
 *
 * In order to get MATLAB filter to work properly on Linux, you need \c csh to be installed. This is not always the case, notably on
 * \c Ubuntu distributions.
 *
 * \section Doc_FAQ_FAQCount How many questions does this FAQ contains ?
 *
 * You will be asked this question when you request support from the development team, in order to make sure you actually read this FAQ! (the answer to 
 * this question currently is 26!)
 *
 */
/*
 *  - funding : you can help fund the project and its permanent developers FIXME
 *
 * \section Doc_FAQ_Roadmap What is the planned roadmap for OpenViBE development ?
 *
 * TODO
 *
 * \section Doc_FAQ_OtherBCISoftwareDifferences How does OpenViBE differ from other BCI platforms ?
 *
 * TODO
 */
